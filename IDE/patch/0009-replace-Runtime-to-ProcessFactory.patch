From 67b04727480ffa46a2c61ae9392afa20e2c59eb5 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E5=BE=90=E6=8C=81=E6=81=92=20Xu=20Chiheng?=
 <chiheng.xu@gmail.com>
Date: Sat, 6 Apr 2024 14:07:10 +0800
Subject: [PATCH 09/39] replace Runtime to ProcessFactory

---
 .../autotools/ui/editors/automake/Command.java      |  3 ++-
 .../cdt/make/internal/core/makefile/Command.java    |  3 ++-
 .../cdt/managedbuilder/testplugin/DiffUtil.java     |  3 ++-
 .../ui/properties/BuildBehaviourTab.java            |  1 +
 .../internal/ui/properties/CMakePropertyPage.java   |  4 +++-
 .../cdt/core/parser/tests/ast2/AST2Tests.java       |  1 +
 .../suite/org/eclipse/cdt/core/testplugin/Main.java |  3 ++-
 .../eclipse/cdt/core/testplugin/ResourceHelper.java |  3 ++-
 .../org/eclipse/cdt/core/parser/CodeReader.java     |  1 +
 .../eclipse/cdt/internal/core/pdom/PDOMManager.java |  1 +
 .../utils/org/eclipse/cdt/internal/core/Cygwin.java |  3 ++-
 .../utils/org/eclipse/cdt/utils/CygPath.java        |  5 +++--
 .../src/org/eclipse/cdt/ui/testplugin/Main.java     |  3 ++-
 .../core/services/local/LocalProcessBuilder.java    | 13 +++++++------
 .../server/core/commands/ServerShellCommand.java    |  2 +-
 .../eclipse/remote/proxy/tests/ConnectionTests.java |  3 ++-
 .../remote/proxy/tests/MultiplexServerTests.java    |  3 ++-
 .../connector/process/ProcessConnector.java         |  2 +-
 18 files changed, 37 insertions(+), 20 deletions(-)

diff --git a/build/org.eclipse.cdt.autotools.ui/src/org/eclipse/cdt/internal/autotools/ui/editors/automake/Command.java b/build/org.eclipse.cdt.autotools.ui/src/org/eclipse/cdt/internal/autotools/ui/editors/automake/Command.java
index f15a0dd7af..4a27475a3d 100644
--- a/build/org.eclipse.cdt.autotools.ui/src/org/eclipse/cdt/internal/autotools/ui/editors/automake/Command.java
+++ b/build/org.eclipse.cdt.autotools.ui/src/org/eclipse/cdt/internal/autotools/ui/editors/automake/Command.java
@@ -17,6 +17,7 @@ import java.io.File;
 import java.io.IOException;
 
 import org.eclipse.cdt.make.core.makefile.ICommand;
+import org.eclipse.cdt.utils.spawner.ProcessFactory;
 
 /**
  * Makefile : ( statement ) *
@@ -122,7 +123,7 @@ public class Command extends Directive implements ICommand {
 	@Override
 	public Process execute(String shell, String[] envp, File dir) throws IOException {
 		String[] cmdArray = new String[] { shell, "-c", command }; //$NON-NLS-1$
-		return Runtime.getRuntime().exec(cmdArray, envp, dir);
+		return ProcessFactory.getFactory().exec(cmdArray, envp, dir);
 	}
 
 }
diff --git a/build/org.eclipse.cdt.make.core/src/org/eclipse/cdt/make/internal/core/makefile/Command.java b/build/org.eclipse.cdt.make.core/src/org/eclipse/cdt/make/internal/core/makefile/Command.java
index 69f4e9d92b..75f1158359 100644
--- a/build/org.eclipse.cdt.make.core/src/org/eclipse/cdt/make/internal/core/makefile/Command.java
+++ b/build/org.eclipse.cdt.make.core/src/org/eclipse/cdt/make/internal/core/makefile/Command.java
@@ -17,6 +17,7 @@ import java.io.File;
 import java.io.IOException;
 
 import org.eclipse.cdt.make.core.makefile.ICommand;
+import org.eclipse.cdt.utils.spawner.ProcessFactory;
 
 /**
  * Makefile : ( statement ) *
@@ -117,7 +118,7 @@ public class Command extends Directive implements ICommand {
 	@Override
 	public Process execute(String shell, String[] envp, File dir) throws IOException {
 		String[] cmdArray = new String[] { shell, "-c", command }; //$NON-NLS-1$
-		return Runtime.getRuntime().exec(cmdArray, envp, dir);
+		return ProcessFactory.getFactory().exec(cmdArray, envp, dir);
 	}
 
 }
diff --git a/build/org.eclipse.cdt.managedbuilder.core.tests/suite/org/eclipse/cdt/managedbuilder/testplugin/DiffUtil.java b/build/org.eclipse.cdt.managedbuilder.core.tests/suite/org/eclipse/cdt/managedbuilder/testplugin/DiffUtil.java
index 1e276b7839..7be0973b35 100644
--- a/build/org.eclipse.cdt.managedbuilder.core.tests/suite/org/eclipse/cdt/managedbuilder/testplugin/DiffUtil.java
+++ b/build/org.eclipse.cdt.managedbuilder.core.tests/suite/org/eclipse/cdt/managedbuilder/testplugin/DiffUtil.java
@@ -17,13 +17,14 @@ import java.io.BufferedReader;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;
+import org.eclipse.cdt.utils.spawner.ProcessFactory;
 
 public abstract class DiffUtil {
 	public static String diff(String location1, String location2) {
 		StringBuilder buf = new StringBuilder();
 		try {
 			String[] command = new String[] { "diff", "-ub", location1, location2 };
-			Process p = Runtime.getRuntime().exec(command);
+			Process p = ProcessFactory.getFactory().exec(command);
 			InputStream in = p.getInputStream();
 			if (in == null) {
 				return null;
diff --git a/build/org.eclipse.cdt.managedbuilder.ui/src/org/eclipse/cdt/managedbuilder/ui/properties/BuildBehaviourTab.java b/build/org.eclipse.cdt.managedbuilder.ui/src/org/eclipse/cdt/managedbuilder/ui/properties/BuildBehaviourTab.java
index 2151ada3d0..7d55154c68 100644
--- a/build/org.eclipse.cdt.managedbuilder.ui/src/org/eclipse/cdt/managedbuilder/ui/properties/BuildBehaviourTab.java
+++ b/build/org.eclipse.cdt.managedbuilder.ui/src/org/eclipse/cdt/managedbuilder/ui/properties/BuildBehaviourTab.java
@@ -30,6 +30,7 @@ import org.eclipse.cdt.managedbuilder.internal.ui.Messages;
 import org.eclipse.cdt.newmake.core.IMakeBuilderInfo;
 import org.eclipse.cdt.ui.newui.AbstractCPropertyTab;
 import org.eclipse.cdt.ui.newui.ICPropertyProvider;
+import org.eclipse.cdt.utils.spawner.ProcessFactory;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.swt.SWT;
 import org.eclipse.swt.accessibility.AccessibleAdapter;
diff --git a/cmake/org.eclipse.cdt.cmake.ui/src/org/eclipse/cdt/cmake/internal/ui/properties/CMakePropertyPage.java b/cmake/org.eclipse.cdt.cmake.ui/src/org/eclipse/cdt/cmake/internal/ui/properties/CMakePropertyPage.java
index eaee154a39..cad9dc656a 100644
--- a/cmake/org.eclipse.cdt.cmake.ui/src/org/eclipse/cdt/cmake/internal/ui/properties/CMakePropertyPage.java
+++ b/cmake/org.eclipse.cdt.cmake.ui/src/org/eclipse/cdt/cmake/internal/ui/properties/CMakePropertyPage.java
@@ -36,6 +36,7 @@ import org.eclipse.cdt.core.build.ICBuildCommandLauncher;
 import org.eclipse.cdt.core.build.ICBuildConfiguration;
 import org.eclipse.cdt.core.build.IToolChain;
 import org.eclipse.cdt.core.resources.IConsole;
+import org.eclipse.cdt.utils.spawner.ProcessFactory;
 import org.eclipse.core.resources.IBuildConfiguration;
 import org.eclipse.core.resources.IProject;
 import org.eclipse.core.runtime.CoreException;
@@ -134,7 +135,8 @@ public class CMakePropertyPage extends PropertyPage {
 						String sourceDir = project.getLocation().toString();
 						String buildDir = project.getLocation().append("build").append(configName).toString(); //$NON-NLS-1$
 
-						Runtime.getRuntime().exec(new String[] { "cmake-gui", "-S" + sourceDir, "-B" + buildDir }); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
+						ProcessFactory.getFactory()
+								.exec(new String[] { "cmake-gui", "-S" + sourceDir, "-B" + buildDir }); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
 					} catch (CoreException | IOException e1) {
 						MessageDialog.openError(parent.getShell(),
 								Messages.CMakePropertyPage_FailedToStartCMakeGui_Title,
diff --git a/core/org.eclipse.cdt.core.tests/parser/org/eclipse/cdt/core/parser/tests/ast2/AST2Tests.java b/core/org.eclipse.cdt.core.tests/parser/org/eclipse/cdt/core/parser/tests/ast2/AST2Tests.java
index c231849c00..e823b7b889 100644
--- a/core/org.eclipse.cdt.core.tests/parser/org/eclipse/cdt/core/parser/tests/ast2/AST2Tests.java
+++ b/core/org.eclipse.cdt.core.tests/parser/org/eclipse/cdt/core/parser/tests/ast2/AST2Tests.java
@@ -134,6 +134,7 @@ import org.eclipse.cdt.internal.core.dom.parser.c.CVisitor;
 import org.eclipse.cdt.internal.core.dom.parser.c.ICInternalBinding;
 import org.eclipse.cdt.internal.core.model.ASTStringUtil;
 import org.eclipse.cdt.internal.core.parser.ParserException;
+import org.eclipse.cdt.utils.spawner.ProcessFactory;
 
 import junit.framework.TestSuite;
 
diff --git a/core/org.eclipse.cdt.core.tests/suite/org/eclipse/cdt/core/testplugin/Main.java b/core/org.eclipse.cdt.core.tests/suite/org/eclipse/cdt/core/testplugin/Main.java
index c4aa1f9c4f..3e14f34142 100644
--- a/core/org.eclipse.cdt.core.tests/suite/org/eclipse/cdt/core/testplugin/Main.java
+++ b/core/org.eclipse.cdt.core.tests/suite/org/eclipse/cdt/core/testplugin/Main.java
@@ -25,6 +25,7 @@ import java.net.URLClassLoader;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.StringTokenizer;
+import org.eclipse.cdt.utils.spawner.ProcessFactory;
 
 /**
  * Startup class for Eclipse. Creates a class loader using
@@ -402,7 +403,7 @@ public class Main {
 		if (endSplash == null)
 			return;
 		try {
-			Runtime.getRuntime().exec(endSplash);
+			ProcessFactory.getFactory().exec(endSplash);
 		} catch (Exception e) {
 		}
 	}
diff --git a/core/org.eclipse.cdt.core.tests/suite/org/eclipse/cdt/core/testplugin/ResourceHelper.java b/core/org.eclipse.cdt.core.tests/suite/org/eclipse/cdt/core/testplugin/ResourceHelper.java
index a5db6d9eb3..2fa618acb8 100644
--- a/core/org.eclipse.cdt.core.tests/suite/org/eclipse/cdt/core/testplugin/ResourceHelper.java
+++ b/core/org.eclipse.cdt.core.tests/suite/org/eclipse/cdt/core/testplugin/ResourceHelper.java
@@ -55,6 +55,7 @@ import org.eclipse.core.runtime.OperationCanceledException;
 import org.eclipse.core.runtime.Path;
 import org.eclipse.core.runtime.Platform;
 import org.eclipse.core.runtime.jobs.Job;
+import org.eclipse.cdt.utils.spawner.ProcessFactory;
 import org.junit.Assert;
 
 /**
@@ -592,7 +593,7 @@ public class ResourceHelper {
 		}
 
 		String command[] = { "ln", "-s", realPath.toString(), linkPath.toString() };
-		Process process = Runtime.getRuntime().exec(command);
+		Process process = ProcessFactory.getFactory().exec(command);
 
 		// Wait for up to 2.5s...
 		for (int i = 0; i < 5; i++) {
diff --git a/core/org.eclipse.cdt.core/parser/org/eclipse/cdt/core/parser/CodeReader.java b/core/org.eclipse.cdt.core/parser/org/eclipse/cdt/core/parser/CodeReader.java
index 6fc53257b3..a0338a6cca 100644
--- a/core/org.eclipse.cdt.core/parser/org/eclipse/cdt/core/parser/CodeReader.java
+++ b/core/org.eclipse.cdt.core/parser/org/eclipse/cdt/core/parser/CodeReader.java
@@ -28,6 +28,7 @@ import java.nio.charset.CoderResult;
 import java.nio.charset.CodingErrorAction;
 
 import org.eclipse.cdt.core.parser.util.CharArrayUtils;
+import org.eclipse.cdt.utils.spawner.ProcessFactory;
 
 /**
  * Reads the content of a file into a char[] buffer.
diff --git a/core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/pdom/PDOMManager.java b/core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/pdom/PDOMManager.java
index 78a52a1cd6..a972c47482 100644
--- a/core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/pdom/PDOMManager.java
+++ b/core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/pdom/PDOMManager.java
@@ -92,6 +92,7 @@ import org.eclipse.cdt.internal.core.pdom.indexer.ProjectIndexerInputAdapter;
 import org.eclipse.cdt.internal.core.pdom.indexer.TranslationUnitCollector;
 import org.eclipse.cdt.internal.core.pdom.indexer.TriggerNotificationTask;
 import org.eclipse.cdt.internal.core.resources.PathCanonicalizationStrategy;
+import org.eclipse.cdt.utils.spawner.ProcessFactory;
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.resources.IProject;
 import org.eclipse.core.resources.IResource;
diff --git a/core/org.eclipse.cdt.core/utils/org/eclipse/cdt/internal/core/Cygwin.java b/core/org.eclipse.cdt.core/utils/org/eclipse/cdt/internal/core/Cygwin.java
index 4e2fc74881..d4fa713b00 100644
--- a/core/org.eclipse.cdt.core/utils/org/eclipse/cdt/internal/core/Cygwin.java
+++ b/core/org.eclipse.cdt.core/utils/org/eclipse/cdt/internal/core/Cygwin.java
@@ -24,6 +24,7 @@ import java.util.Objects;
 import org.eclipse.cdt.core.CCorePlugin;
 import org.eclipse.cdt.core.envvar.IEnvironmentVariable;
 import org.eclipse.cdt.core.settings.model.ICConfigurationDescription;
+import org.eclipse.cdt.utils.spawner.ProcessFactory;
 import org.eclipse.cdt.utils.PathUtil;
 import org.eclipse.cdt.utils.WindowsRegistry;
 import org.eclipse.core.runtime.IPath;
@@ -113,7 +114,7 @@ public class Cygwin {
 		String command = getCommand(args);
 		String translatedPath = translatedPathsCache.get(command);
 		if (translatedPath == null) {
-			Process cygpathProcess = Runtime.getRuntime().exec(args);
+			Process cygpathProcess = ProcessFactory.getFactory().exec(args);
 			BufferedReader stdout = new BufferedReader(new InputStreamReader(cygpathProcess.getInputStream()));
 			String firstLine = null;
 			try {
diff --git a/core/org.eclipse.cdt.core/utils/org/eclipse/cdt/utils/CygPath.java b/core/org.eclipse.cdt.core/utils/org/eclipse/cdt/utils/CygPath.java
index d6e888a46a..8dbe18eb5d 100644
--- a/core/org.eclipse.cdt.core/utils/org/eclipse/cdt/utils/CygPath.java
+++ b/core/org.eclipse.cdt.core/utils/org/eclipse/cdt/utils/CygPath.java
@@ -21,6 +21,7 @@ import java.io.InputStreamReader;
 import java.io.OutputStreamWriter;
 
 import org.eclipse.cdt.internal.core.Cygwin;
+import org.eclipse.cdt.utils.spawner.ProcessFactory;
 import org.eclipse.core.runtime.IPath;
 import org.eclipse.core.runtime.Path;
 import org.eclipse.core.runtime.Platform;
@@ -41,7 +42,7 @@ public class CygPath {
 			// Don't run this on non-windows platforms
 			throw new IOException("Not Windows"); //$NON-NLS-1$
 		String[] args = { command, "--windows", "--file", "-" }; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
-		cygpath = Runtime.getRuntime().exec(args);
+		cygpath = ProcessFactory.getFactory().exec(args);
 		stdin = new BufferedWriter(new OutputStreamWriter(cygpath.getOutputStream()));
 		stdout = new BufferedReader(new InputStreamReader(cygpath.getInputStream()));
 		try {
@@ -108,7 +109,7 @@ public class CygPath {
 		Process cygPath = null;
 		BufferedReader reader = null;
 		try {
-			cygPath = Runtime.getRuntime().exec(new String[] { "cygpath", "-w", path }); //$NON-NLS-1$ //$NON-NLS-2$
+			cygPath = ProcessFactory.getFactory().exec(new String[] { "cygpath", "-w", path }); //$NON-NLS-1$ //$NON-NLS-2$
 			reader = new BufferedReader(new InputStreamReader(cygPath.getInputStream()));
 			String newPath = reader.readLine();
 			IPath ipath;
diff --git a/core/org.eclipse.cdt.ui.tests/src/org/eclipse/cdt/ui/testplugin/Main.java b/core/org.eclipse.cdt.ui.tests/src/org/eclipse/cdt/ui/testplugin/Main.java
index cb6818d241..545c66b1ee 100644
--- a/core/org.eclipse.cdt.ui.tests/src/org/eclipse/cdt/ui/testplugin/Main.java
+++ b/core/org.eclipse.cdt.ui.tests/src/org/eclipse/cdt/ui/testplugin/Main.java
@@ -25,6 +25,7 @@ import java.util.ArrayList;
 import java.util.List;
 import java.util.StringTokenizer;
 import java.util.Vector;
+import org.eclipse.cdt.utils.spawner.ProcessFactory;
 
 // Copied from startup.jar. planned to be removed soon
 
@@ -392,7 +393,7 @@ public class Main {
 		if (endSplash == null)
 			return;
 		try {
-			Runtime.getRuntime().exec(endSplash);
+			ProcessFactory.getFactory().exec(endSplash);
 		} catch (Exception e) {
 		}
 	}
diff --git a/remote/org.eclipse.remote.core/src/org/eclipse/remote/internal/core/services/local/LocalProcessBuilder.java b/remote/org.eclipse.remote.core/src/org/eclipse/remote/internal/core/services/local/LocalProcessBuilder.java
index 3f7a4a3a2f..71b2d5d768 100644
--- a/remote/org.eclipse.remote.core/src/org/eclipse/remote/internal/core/services/local/LocalProcessBuilder.java
+++ b/remote/org.eclipse.remote.core/src/org/eclipse/remote/internal/core/services/local/LocalProcessBuilder.java
@@ -41,6 +41,7 @@ import org.eclipse.remote.core.IRemoteProcess;
 import org.eclipse.remote.core.IRemoteProcessBuilder;
 import org.eclipse.remote.internal.core.RemoteCorePlugin;
 import org.eclipse.remote.internal.core.RemoteProcess;
+import org.eclipse.cdt.utils.spawner.ProcessFactory;
 
 public class LocalProcessBuilder extends AbstractRemoteProcessBuilder {
 	private static final String EXTENSION_POINT_ID = "processFactory"; //$NON-NLS-1$
@@ -148,32 +149,32 @@ public class LocalProcessBuilder extends AbstractRemoteProcessBuilder {
 			processFactory = new IProcessFactory() {
 				@Override
 				public Process exec(String cmd) throws IOException {
-					return Runtime.getRuntime().exec(cmd);
+					return ProcessFactory.getFactory().exec(cmd);
 				}
 
 				@Override
 				public Process exec(String[] cmdarray) throws IOException {
-					return Runtime.getRuntime().exec(cmdarray);
+					return ProcessFactory.getFactory().exec(cmdarray);
 				}
 
 				@Override
 				public Process exec(String[] cmdarray, String[] envp) throws IOException {
-					return Runtime.getRuntime().exec(cmdarray, envp);
+					return ProcessFactory.getFactory().exec(cmdarray, envp);
 				}
 
 				@Override
 				public Process exec(String cmd, String[] envp) throws IOException {
-					return Runtime.getRuntime().exec(cmd, envp);
+					return ProcessFactory.getFactory().exec(cmd, envp);
 				}
 
 				@Override
 				public Process exec(String cmd, String[] envp, File dir) throws IOException {
-					return Runtime.getRuntime().exec(cmd, envp, dir);
+					return ProcessFactory.getFactory().exec(cmd, envp, dir);
 				}
 
 				@Override
 				public Process exec(String[] cmdarray, String[] envp, File dir) throws IOException {
-					return Runtime.getRuntime().exec(cmdarray, envp, dir);
+					return ProcessFactory.getFactory().exec(cmdarray, envp, dir);
 				}
 			};
 		}
diff --git a/remote/org.eclipse.remote.proxy.server.core/src/org/eclipse/remote/internal/proxy/server/core/commands/ServerShellCommand.java b/remote/org.eclipse.remote.proxy.server.core/src/org/eclipse/remote/internal/proxy/server/core/commands/ServerShellCommand.java
index eb2b93e7f7..a306a42758 100644
--- a/remote/org.eclipse.remote.proxy.server.core/src/org/eclipse/remote/internal/proxy/server/core/commands/ServerShellCommand.java
+++ b/remote/org.eclipse.remote.proxy.server.core/src/org/eclipse/remote/internal/proxy/server/core/commands/ServerShellCommand.java
@@ -160,7 +160,7 @@ public class ServerShellCommand extends AbstractServerExecCommand {
 
 		Process p;
 		try {
-			p = Runtime.getRuntime().exec(command);
+			p = ProcessFactory.getFactory().exec(command);
 		} catch (Exception e) {
 			throw new IOException(e.getMessage());
 		}
diff --git a/remote/org.eclipse.remote.proxy.tests/src/org/eclipse/remote/proxy/tests/ConnectionTests.java b/remote/org.eclipse.remote.proxy.tests/src/org/eclipse/remote/proxy/tests/ConnectionTests.java
index b1100eb7af..36fbd80ec0 100644
--- a/remote/org.eclipse.remote.proxy.tests/src/org/eclipse/remote/proxy/tests/ConnectionTests.java
+++ b/remote/org.eclipse.remote.proxy.tests/src/org/eclipse/remote/proxy/tests/ConnectionTests.java
@@ -12,6 +12,7 @@ import java.io.OutputStreamWriter;
 import java.util.Arrays;
 import java.util.Base64;
 
+import org.eclipse.cdt.utils.spawner.ProcessFactory;
 import org.eclipse.core.runtime.NullProgressMonitor;
 import org.eclipse.jsch.core.IJSchService;
 import org.eclipse.jsch.ui.UserInfoPrompter;
@@ -184,7 +185,7 @@ public class ConnectionTests extends TestCase {
 		}
 
 		//		try {
-		//			final Process proc = Runtime.getRuntime().exec("java"
+		//			final Process proc = ProcessFactory.getFactory().exec("java"
 		//					+ " -cp /Users/gw6/Work/git/org.eclipse.remote/releng/org.eclipse.remote.proxy.server.product/target/products/proxy.server/macosx/cocoa/x86_64/Proxy.app/Contents/Eclipse/plugins/org.eclipse.equinox.launcher_1.3.200.v20160318-1642.jar"
 		//					+ " org.eclipse.equinox.launcher.Main"
 		//					+ " -application org.eclipse.remote.proxy.server.core.application"
diff --git a/remote/org.eclipse.remote.proxy.tests/src/org/eclipse/remote/proxy/tests/MultiplexServerTests.java b/remote/org.eclipse.remote.proxy.tests/src/org/eclipse/remote/proxy/tests/MultiplexServerTests.java
index 9ff7172a24..e2d1fbb80b 100644
--- a/remote/org.eclipse.remote.proxy.tests/src/org/eclipse/remote/proxy/tests/MultiplexServerTests.java
+++ b/remote/org.eclipse.remote.proxy.tests/src/org/eclipse/remote/proxy/tests/MultiplexServerTests.java
@@ -8,6 +8,7 @@ import java.util.ArrayList;
 import java.util.List;
 import java.util.Random;
 
+import org.eclipse.cdt.utils.spawner.ProcessFactory;
 import org.eclipse.remote.proxy.protocol.core.StreamChannel;
 import org.eclipse.remote.proxy.protocol.core.StreamChannelManager;
 
@@ -110,7 +111,7 @@ public class MultiplexServerTests extends TestCase {
 				clntRecvBufs[i] = new StringBuffer();
 			}
 
-			final Process proc = Runtime.getRuntime().exec("java -jar /Users/gw6/Desktop/Server.jar");
+			final Process proc = ProcessFactory.getFactory().exec("java -jar /Users/gw6/Desktop/Server.jar");
 			assertTrue(proc.isAlive());
 
 			new Thread("stderr") {
diff --git a/terminal/plugins/org.eclipse.tm.terminal.connector.process/src/org/eclipse/tm/terminal/connector/process/ProcessConnector.java b/terminal/plugins/org.eclipse.tm.terminal.connector.process/src/org/eclipse/tm/terminal/connector/process/ProcessConnector.java
index 7b51918944..7f32b96223 100644
--- a/terminal/plugins/org.eclipse.tm.terminal.connector.process/src/org/eclipse/tm/terminal/connector/process/ProcessConnector.java
+++ b/terminal/plugins/org.eclipse.tm.terminal.connector.process/src/org/eclipse/tm/terminal/connector/process/ProcessConnector.java
@@ -172,7 +172,7 @@ public class ProcessConnector extends AbstractStreamsConnector {
 							pty);
 				} else {
 					// No PTY -> just execute via the standard Java Runtime implementation.
-					process = Runtime.getRuntime().exec(command.toString(), envp, workingDir);
+					process = ProcessFactory.getFactory().exec(command.toString(), envp, workingDir);
 				}
 			}
 
-- 
2.42.1

