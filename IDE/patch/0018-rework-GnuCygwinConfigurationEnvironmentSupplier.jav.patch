From 81b1252dc76102220712002651558cf799ad6b08 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E5=BE=90=E6=8C=81=E6=81=92=20Xu=20Chiheng?=
 <chiheng.xu@gmail.com>
Date: Mon, 8 Apr 2024 08:33:54 +0800
Subject: [PATCH] rework GnuCygwinConfigurationEnvironmentSupplier.java

---
 ...ygwinConfigurationEnvironmentSupplier.java | 34 +++++--------------
 1 file changed, 9 insertions(+), 25 deletions(-)

diff --git a/build/org.eclipse.cdt.managedbuilder.gnu.ui/src/org/eclipse/cdt/managedbuilder/gnu/cygwin/GnuCygwinConfigurationEnvironmentSupplier.java b/build/org.eclipse.cdt.managedbuilder.gnu.ui/src/org/eclipse/cdt/managedbuilder/gnu/cygwin/GnuCygwinConfigurationEnvironmentSupplier.java
index 37fda4e164..6e6d2393d5 100644
--- a/build/org.eclipse.cdt.managedbuilder.gnu.ui/src/org/eclipse/cdt/managedbuilder/gnu/cygwin/GnuCygwinConfigurationEnvironmentSupplier.java
+++ b/build/org.eclipse.cdt.managedbuilder.gnu.ui/src/org/eclipse/cdt/managedbuilder/gnu/cygwin/GnuCygwinConfigurationEnvironmentSupplier.java
@@ -24,18 +24,16 @@ import org.eclipse.cdt.managedbuilder.envvar.IConfigurationEnvironmentVariableSu
 import org.eclipse.cdt.managedbuilder.envvar.IEnvironmentVariableProvider;
 import org.eclipse.cdt.managedbuilder.internal.envvar.BuildEnvVar;
 import org.eclipse.core.runtime.Path;
+import org.eclipse.core.runtime.Platform;
 
 /**
  * @noextend This class is not intended to be subclassed by clients.
  */
+@SuppressWarnings("restriction")
 public class GnuCygwinConfigurationEnvironmentSupplier implements IConfigurationEnvironmentVariableSupplier {
 	private static final String ENV_PATH = "PATH"; //$NON-NLS-1$
 	private static final String ENV_LANG = "LANG"; //$NON-NLS-1$
 	private static final String ENV_LC_ALL = "LC_ALL"; //$NON-NLS-1$
-	private static final String ENV_LC_MESSAGES = "LC_MESSAGES"; //$NON-NLS-1$
-
-	private static final String PROPERTY_OSNAME = "os.name"; //$NON-NLS-1$
-	private static final String BACKSLASH = java.io.File.separator;
 
 	@Override
 	public IBuildEnvironmentVariable getVariable(String variableName, IConfiguration configuration,
@@ -44,13 +42,12 @@ public class GnuCygwinConfigurationEnvironmentSupplier implements IConfiguration
 			return null;
 		}
 
-		if (!System.getProperty(PROPERTY_OSNAME).toLowerCase().startsWith("windows ")) { //$NON-NLS-1$
+		if (!Platform.getOS().equals(Platform.OS_WIN32)) {
 			return null;
 		}
 
 		if (variableName.equalsIgnoreCase(ENV_PATH)) {
-			@SuppressWarnings("nls")
-			String path = "${" + Cygwin.ENV_CYGWIN_HOME + "}" + BACKSLASH + "bin";
+			String path = "${" + Cygwin.ENV_CYGWIN_HOME + "}" + "/bin"; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
 			return new BuildEnvVar(ENV_PATH, path, IBuildEnvironmentVariable.ENVVAR_PREPEND);
 
 		} else if (variableName.equals(Cygwin.ENV_CYGWIN_HOME)) {
@@ -68,23 +65,9 @@ public class GnuCygwinConfigurationEnvironmentSupplier implements IConfiguration
 			return null;
 
 		} else if (variableName.equalsIgnoreCase(ENV_LANG)) {
-			// Workaround for not being able to select encoding for CDT console -> change codeset to Latin1
-			String langValue = System.getenv(ENV_LANG);
-			if (langValue == null || langValue.length() == 0) {
-				langValue = System.getenv(ENV_LC_ALL);
-			}
-			if (langValue == null || langValue.length() == 0) {
-				langValue = System.getenv(ENV_LC_MESSAGES);
-			}
-			if (langValue != null && langValue.length() > 0) {
-				// langValue is [language[_territory][.codeset][@modifier]], i.e. "en_US.UTF-8@dict"
-				// we replace codeset with Latin1 as CDT console garbles UTF
-				// and ignore modifier which is not used by LANG
-				langValue = langValue.replaceFirst("([^.@]*)(\\..*)?(@.*)?", "$1.ISO-8859-1"); //$NON-NLS-1$ //$NON-NLS-2$
-			} else {
-				langValue = "C.ISO-8859-1"; //$NON-NLS-1$
-			}
-			return new BuildEnvVar(ENV_LANG, langValue);
+			return new BuildEnvVar(ENV_LANG, "en_US.UTF-8"); //$NON-NLS-1$
+		} else if (variableName.equalsIgnoreCase(ENV_LC_ALL)) {
+			return new BuildEnvVar(ENV_LC_ALL, "en_US.UTF-8"); //$NON-NLS-1$
 		}
 		return null;
 	}
@@ -94,8 +77,9 @@ public class GnuCygwinConfigurationEnvironmentSupplier implements IConfiguration
 			IEnvironmentVariableProvider provider) {
 		IBuildEnvironmentVariable varHome = getVariable(Cygwin.ENV_CYGWIN_HOME, configuration, provider);
 		IBuildEnvironmentVariable varLang = getVariable(ENV_LANG, configuration, provider);
+		IBuildEnvironmentVariable varLCAll = getVariable(ENV_LC_ALL, configuration, provider);
 		IBuildEnvironmentVariable varPath = getVariable(ENV_PATH, configuration, provider);
 
-		return new IBuildEnvironmentVariable[] { varHome, varLang, varPath };
+		return new IBuildEnvironmentVariable[] { varHome, varLang, varLCAll, varPath };
 	}
 }
-- 
2.42.1

