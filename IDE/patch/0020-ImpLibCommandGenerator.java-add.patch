From b56d52655aeb259041b0edf4879d716bc963a4bd Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E5=BE=90=E6=8C=81=E6=81=92=20Xu=20Chiheng?=
 <chiheng.xu@gmail.com>
Date: Wed, 10 Apr 2024 04:18:03 +0800
Subject: [PATCH 20/42] ImpLibCommandGenerator.java : add

---
 .../gnu/ImpLibCommandGenerator.java           | 43 +++++++++++++++++++
 1 file changed, 43 insertions(+)
 create mode 100644 build/org.eclipse.cdt.managedbuilder.gnu.ui/src/org/eclipse/cdt/managedbuilder/gnu/ImpLibCommandGenerator.java

diff --git a/build/org.eclipse.cdt.managedbuilder.gnu.ui/src/org/eclipse/cdt/managedbuilder/gnu/ImpLibCommandGenerator.java b/build/org.eclipse.cdt.managedbuilder.gnu.ui/src/org/eclipse/cdt/managedbuilder/gnu/ImpLibCommandGenerator.java
new file mode 100644
index 0000000000..4a5fd55d57
--- /dev/null
+++ b/build/org.eclipse.cdt.managedbuilder.gnu.ui/src/org/eclipse/cdt/managedbuilder/gnu/ImpLibCommandGenerator.java
@@ -0,0 +1,43 @@
+/********************************************************************************
+ * Copyright (c) 2024 徐持恒 Xu Chiheng
+ *
+ * This program and the accompanying materials are made available under the
+ * terms of the Eclipse Public License 2.0 which is available at
+ * http://www.eclipse.org/legal/epl-2.0.
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ ********************************************************************************/
+package org.eclipse.cdt.managedbuilder.gnu;
+
+import org.eclipse.cdt.core.cdtvariables.CdtVariableException;
+import org.eclipse.cdt.managedbuilder.core.IOption;
+import org.eclipse.cdt.managedbuilder.core.IOptionCommandGenerator;
+import org.eclipse.cdt.utils.cdtvariables.CdtVariableResolver;
+import org.eclipse.cdt.utils.cdtvariables.IVariableSubstitutor;
+
+public class ImpLibCommandGenerator implements IOptionCommandGenerator {
+
+	public ImpLibCommandGenerator() {
+		// TODO Auto-generated constructor stub
+	}
+
+	@Override
+	public String generateCommand(IOption option, IVariableSubstitutor macroSubstitutor) {
+		// TODO Auto-generated method stub
+		String osType = null;
+		String projName = null;
+		try {
+			osType = macroSubstitutor.resolveToString(CdtVariableResolver.VAR_OS_TYPE);
+			projName = macroSubstitutor.resolveToString(CdtVariableResolver.VAR_PROJ_NAME);
+		} catch (CdtVariableException e) {
+			// TODO Auto-generated catch block
+			e.printStackTrace();
+		}
+		if (osType != null && projName != null) {
+			if (osType == "win32") { //$NON-NLS-1$
+				return "-Wl,--out-implib,lib" + projName + ".dll.a"; //$NON-NLS-1$ //$NON-NLS-2$
+			}
+		}
+		return null;
+	}
+}
-- 
2.42.1

