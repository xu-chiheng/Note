From 465068afa27fc8539b9e776e062d21ad89d6201c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E5=BE=90=E6=8C=81=E6=81=92=20Xu=20Chiheng?=
 <chiheng.xu@gmail.com>
Date: Wed, 10 Apr 2024 04:18:03 +0800
Subject: [PATCH 31/37] CommandFactory_Cygwin.java : add

---
 .../command/CommandFactory_Cygwin.java        | 64 +++++++++++++++++++
 1 file changed, 64 insertions(+)
 create mode 100644 dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/service/command/CommandFactory_Cygwin.java

diff --git a/dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/service/command/CommandFactory_Cygwin.java b/dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/service/command/CommandFactory_Cygwin.java
new file mode 100644
index 0000000000..3450d8e5d1
--- /dev/null
+++ b/dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/service/command/CommandFactory_Cygwin.java
@@ -0,0 +1,64 @@
+/********************************************************************************
+ * Copyright (c) 2024 徐持恒 Xu Chiheng
+ *
+ * This program and the accompanying materials are made available under the
+ * terms of the Eclipse Public License 2.0 which is available at
+ * http://www.eclipse.org/legal/epl-2.0.
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ ********************************************************************************/
+package org.eclipse.cdt.dsf.gdb.service.command;
+
+import org.eclipse.cdt.dsf.datamodel.IDMContext;
+import org.eclipse.cdt.dsf.debug.service.IBreakpoints.IBreakpointsTargetDMContext;
+import org.eclipse.cdt.dsf.debug.service.command.ICommand;
+import org.eclipse.cdt.dsf.debug.service.command.ICommandControlService.ICommandControlDMContext;
+import org.eclipse.cdt.dsf.mi.service.IMIContainerDMContext;
+import org.eclipse.cdt.dsf.mi.service.command.commands.cygwin.CygwinMIBreakInsert;
+import org.eclipse.cdt.dsf.mi.service.command.commands.cygwin.CygwinMIEnvironmentCD;
+import org.eclipse.cdt.dsf.mi.service.command.commands.cygwin.CygwinMIEnvironmentDirectory;
+import org.eclipse.cdt.dsf.mi.service.command.commands.cygwin.CygwinMIFileExecAndSymbols;
+import org.eclipse.cdt.dsf.mi.service.command.output.MIBreakInsertInfo;
+import org.eclipse.cdt.dsf.mi.service.command.output.MIInfo;
+
+public class CommandFactory_Cygwin extends CommandFactory_6_8 {
+
+	@Override
+	public ICommand<MIInfo> createMIEnvironmentCD(ICommandControlDMContext ctx, String path) {
+		return new CygwinMIEnvironmentCD(ctx, path);
+	}
+
+	@Override
+	public ICommand<MIInfo> createMIEnvironmentDirectory(IDMContext ctx, String[] paths, boolean reset) {
+		return new CygwinMIEnvironmentDirectory(ctx, paths, reset);
+	}
+
+	@Override
+	public ICommand<MIInfo> createMIFileExecAndSymbols(IMIContainerDMContext dmc, String file) {
+		return new CygwinMIFileExecAndSymbols(dmc, file);
+	}
+
+	@Override
+	public ICommand<MIInfo> createMIFileExecAndSymbols(IMIContainerDMContext dmc) {
+		return new CygwinMIFileExecAndSymbols(dmc);
+	}
+
+	@Override
+	public ICommand<MIBreakInsertInfo> createMIBreakInsert(IBreakpointsTargetDMContext ctx, String func) {
+		return new CygwinMIBreakInsert(ctx, func, true);
+	}
+
+	@Override
+	public ICommand<MIBreakInsertInfo> createMIBreakInsert(IBreakpointsTargetDMContext ctx, boolean isTemporary,
+			boolean isHardware, String condition, int ignoreCount, String line, String tid) {
+		return new CygwinMIBreakInsert(ctx, isTemporary, isHardware, condition, ignoreCount, line, tid, true);
+	}
+
+	@Override
+	public ICommand<MIBreakInsertInfo> createMIBreakInsert(IBreakpointsTargetDMContext ctx, boolean isTemporary,
+			boolean isHardware, String condition, int ignoreCount, String location, String tid, boolean disabled,
+			boolean isTracepoint) {
+		return new CygwinMIBreakInsert(ctx, isTemporary, isHardware, condition, ignoreCount, location, tid, disabled,
+				isTracepoint, true);
+	}
+}
-- 
2.42.1

