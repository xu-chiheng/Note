diff --git a/build/org.eclipse.cdt.managedbuilder.core.tests/tests/org/eclipse/cdt/managedbuilder/language/settings/providers/tests/CompilationDatabaseParserTest.java b/build/org.eclipse.cdt.managedbuilder.core.tests/tests/org/eclipse/cdt/managedbuilder/language/settings/providers/tests/CompilationDatabaseParserTest.java
index a67532ca43..86d5a59e6b 100644
--- a/build/org.eclipse.cdt.managedbuilder.core.tests/tests/org/eclipse/cdt/managedbuilder/language/settings/providers/tests/CompilationDatabaseParserTest.java
+++ b/build/org.eclipse.cdt.managedbuilder.core.tests/tests/org/eclipse/cdt/managedbuilder/language/settings/providers/tests/CompilationDatabaseParserTest.java
@@ -137,24 +137,23 @@ public class CompilationDatabaseParserTest extends BaseTestCase {
 		CompileCommand command = new CompileCommand();
 		if (haveCommandDir) {
 			if (validCommandDir)
-				command.directory = fSourceFile.getParent().getLocation().toOSString();
+				command.directory = fSourceFile.getParent().getLocation().toString();
 			else
 				command.directory = "foo";
 		}
-		String sourceFilePath = fSourceFile.getLocation().toOSString();
+		String sourceFilePath = fSourceFile.getLocation().toString();
 		if (!useAbsoluteSourcePath) {
-			sourceFilePath = fSourceFile.getLocation().makeRelativeTo(fSourceFile.getParent().getLocation())
-					.toOSString();
+			sourceFilePath = fSourceFile.getLocation().makeRelativeTo(fSourceFile.getParent().getLocation()).toString();
 		}
 		command.file = sourceFilePath;
 		if (haveCommandLine) {
 			if (validCommandLine)
-				command.command = "g++ -I" + fFolder.getLocation().toOSString() + " -DFOO=2 " + sourceFilePath;
+				command.command = "g++ -I" + fFolder.getLocation().toString() + " -DFOO=2 " + sourceFilePath;
 			else
 				command.command = "foo";
 		}
 		if (haveCommandArguments) {
-			command.arguments = new String[] { "g++", "-I" + fFolder.getLocation().toOSString(), "-DFOO=2",
+			command.arguments = new String[] { "g++", "-I" + fFolder.getLocation().toString(), "-DFOO=2",
 					sourceFilePath };
 		}
 
@@ -162,25 +161,25 @@ public class CompilationDatabaseParserTest extends BaseTestCase {
 		CompileCommand command2 = new CompileCommand();
 		if (haveCommandDir) {
 			if (validCommandDir)
-				command2.directory = fSourceFile2.getParent().getLocation().toOSString();
+				command2.directory = fSourceFile2.getParent().getLocation().toString();
 			else
 				command2.directory = "foo";
 		}
-		String sourceFilePath2 = fSourceFile2.getLocation().toOSString();
+		String sourceFilePath2 = fSourceFile2.getLocation().toString();
 		if (!useAbsoluteSourcePath) {
 			sourceFilePath2 = fSourceFile2.getLocation().makeRelativeTo(fSourceFile2.getParent().getLocation())
-					.toOSString();
+					.toString();
 		}
 		command2.file = sourceFilePath2;
 		if (haveCommandLine) {
 			if (validCommandLine)
-				command2.command = "g++ -I" + fFolder.getLocation().toOSString() + " -DFOO=3 " + sourceFilePath2;
+				command2.command = "g++ -I" + fFolder.getLocation().toString() + " -DFOO=3 " + sourceFilePath2;
 			else
 				command2.command = "foo";
 		}
 
 		if (haveCommandArguments) {
-			command2.arguments = new String[] { "g++", "-I" + fFolder.getLocation().toOSString(), "-DFOO=3",
+			command2.arguments = new String[] { "g++", "-I" + fFolder.getLocation().toString(), "-DFOO=3",
 					sourceFilePath2 };
 		}
 
@@ -312,7 +311,7 @@ public class CompilationDatabaseParserTest extends BaseTestCase {
 
 		CompilationDatabaseParser parser = createCompilationDatabaseParser();
 		parser.setBuildParserId(GCC_BUILD_COMMAND_PARSER_EXT);
-		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toOSString());
+		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toString());
 
 		ICConfigurationDescription cfgDescription = getConfigurationDescription(fProject, true);
 
@@ -339,7 +338,7 @@ public class CompilationDatabaseParserTest extends BaseTestCase {
 
 		CompilationDatabaseParser parser = createCompilationDatabaseParser();
 		parser.setBuildParserId(GCC_BUILD_COMMAND_PARSER_EXT);
-		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toOSString());
+		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toString());
 		parser.setExcludeFiles(true);
 
 		ICConfigurationDescription cfgDescription = getConfigurationDescription(fProject, true);
@@ -371,7 +370,7 @@ public class CompilationDatabaseParserTest extends BaseTestCase {
 				CDataUtil.isExcluded(tu.getPath(), getConfigurationDescription(fProject, false).getSourceEntries()));
 
 		CompilationDatabaseParser parser = createCompilationDatabaseParser();
-		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toOSString());
+		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toString());
 		parser.setExcludeFiles(true);
 
 		ICConfigurationDescription cfgDescription = getConfigurationDescription(fProject, true);
@@ -402,7 +401,7 @@ public class CompilationDatabaseParserTest extends BaseTestCase {
 
 		CompilationDatabaseParser parser = createCompilationDatabaseParser();
 		parser.setBuildParserId(GCC_BUILD_COMMAND_PARSER_EXT + "foo");
-		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toOSString());
+		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toString());
 		parser.setExcludeFiles(true);
 
 		ICConfigurationDescription cfgDescription = getConfigurationDescription(fProject, true);
@@ -433,7 +432,7 @@ public class CompilationDatabaseParserTest extends BaseTestCase {
 
 		CompilationDatabaseParser parser = createCompilationDatabaseParser();
 		parser.setBuildParserId(GCC_BUILD_COMMAND_PARSER_EXT);
-		parser.setCompilationDataBasePathProperty(new Path("/testParseCDB_NonExistantCDB").toOSString());
+		parser.setCompilationDataBasePathProperty(new Path("/testParseCDB_NonExistantCDB").toString());
 		parser.setExcludeFiles(true);
 
 		ICConfigurationDescription cfgDescription = getConfigurationDescription(fProject, true);
@@ -495,7 +494,7 @@ public class CompilationDatabaseParserTest extends BaseTestCase {
 
 		CompilationDatabaseParser parser = createCompilationDatabaseParser();
 		parser.setBuildParserId(GCC_BUILD_COMMAND_PARSER_EXT);
-		parser.setCompilationDataBasePathProperty(fCdbFile.getParent().getLocation().toOSString());
+		parser.setCompilationDataBasePathProperty(fCdbFile.getParent().getLocation().toString());
 		parser.setExcludeFiles(true);
 
 		ICConfigurationDescription cfgDescription = getConfigurationDescription(fProject, true);
@@ -525,7 +524,7 @@ public class CompilationDatabaseParserTest extends BaseTestCase {
 		assertTrue(parser.isEmpty());
 		parser.setBuildParserId(GCC_BUILD_COMMAND_PARSER_EXT);
 		parser.setCompilationDataBasePathProperty(new Path("${ProjDirPath}")
-				.append(fCdbFile.getFullPath().makeRelativeTo(cProject.getProject().getFullPath())).toOSString());
+				.append(fCdbFile.getFullPath().makeRelativeTo(cProject.getProject().getFullPath())).toString());
 		parser.setExcludeFiles(true);
 
 		ICConfigurationDescription cfgDescription = getConfigurationDescription(fProject, true);
@@ -554,7 +553,7 @@ public class CompilationDatabaseParserTest extends BaseTestCase {
 				new Path("${WorkspaceDirPath}")
 						.append(fCdbFile.getFullPath()
 								.makeRelativeTo(cProject.getProject().getWorkspace().getRoot().getFullPath()))
-						.toOSString());
+						.toString());
 		parser.setExcludeFiles(true);
 
 		ICConfigurationDescription cfgDescription = getConfigurationDescription(fProject, true);
@@ -580,7 +579,7 @@ public class CompilationDatabaseParserTest extends BaseTestCase {
 				CDataUtil.isExcluded(tu.getPath(), getConfigurationDescription(fProject, false).getSourceEntries()));
 
 		//Make the Json invalid
-		String cdbOsString = fCdbFile.getLocation().toOSString();
+		String cdbOsString = fCdbFile.getLocation().toString();
 		Files.write(Paths.get(cdbOsString), new byte[] { 'f', 'o', 'o' });
 		try (FileReader reader = new FileReader(cdbOsString)) {
 			Gson gson = new Gson();
@@ -596,7 +595,7 @@ public class CompilationDatabaseParserTest extends BaseTestCase {
 				.getExtensionProviderCopy(COMPILATION_DATABASE_PARSER_EXT, true);
 		assertTrue(parser.isEmpty());
 		parser.setBuildParserId(GCC_BUILD_COMMAND_PARSER_EXT);
-		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toOSString());
+		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toString());
 		parser.setExcludeFiles(true);
 
 		ICConfigurationDescription cfgDescription = getConfigurationDescription(fProject, true);
@@ -628,7 +627,7 @@ public class CompilationDatabaseParserTest extends BaseTestCase {
 
 		CompilationDatabaseParser parser = createCompilationDatabaseParser();
 		parser.setBuildParserId(GCC_BUILD_COMMAND_PARSER_EXT);
-		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toOSString());
+		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toString());
 
 		ICConfigurationDescription cfgDescription = getConfigurationDescription(fProject, true);
 
@@ -655,7 +654,7 @@ public class CompilationDatabaseParserTest extends BaseTestCase {
 
 		CompilationDatabaseParser parser = createCompilationDatabaseParser();
 		parser.setBuildParserId(GCC_BUILD_COMMAND_PARSER_EXT);
-		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toOSString());
+		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toString());
 
 		ICConfigurationDescription cfgDescription = getConfigurationDescription(fProject, true);
 
@@ -696,7 +695,7 @@ public class CompilationDatabaseParserTest extends BaseTestCase {
 
 		CompilationDatabaseParser parser = createCompilationDatabaseParser();
 		parser.setBuildParserId(GCC_BUILD_COMMAND_PARSER_EXT);
-		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toOSString());
+		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toString());
 
 		ICConfigurationDescription cfgDescription = getConfigurationDescription(fProject, true);
 
@@ -737,7 +736,7 @@ public class CompilationDatabaseParserTest extends BaseTestCase {
 
 		CompilationDatabaseParser parser = createCompilationDatabaseParser();
 		parser.setBuildParserId(GCC_BUILD_COMMAND_PARSER_EXT);
-		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toOSString());
+		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toString());
 
 		ICConfigurationDescription cfgDescription = getConfigurationDescription(fProject, true);
 
@@ -765,7 +764,7 @@ public class CompilationDatabaseParserTest extends BaseTestCase {
 
 		CompilationDatabaseParser parser = createCompilationDatabaseParser();
 		parser.setBuildParserId(GCC_BUILD_COMMAND_PARSER_EXT);
-		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toOSString());
+		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toString());
 
 		ICConfigurationDescription cfgDescription = getConfigurationDescription(fProject, true);
 
@@ -793,7 +792,7 @@ public class CompilationDatabaseParserTest extends BaseTestCase {
 
 		CompilationDatabaseParser parser = createCompilationDatabaseParser();
 		parser.setBuildParserId(GCC_BUILD_COMMAND_PARSER_EXT);
-		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toOSString());
+		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toString());
 
 		ICConfigurationDescription cfgDescription = getConfigurationDescription(fProject, true);
 
@@ -816,7 +815,7 @@ public class CompilationDatabaseParserTest extends BaseTestCase {
 
 		CompilationDatabaseParser parser = createCompilationDatabaseParser();
 		parser.setBuildParserId(GCC_BUILD_COMMAND_PARSER_EXT);
-		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toOSString());
+		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toString());
 
 		ICConfigurationDescription cfgDescription = getConfigurationDescription(fProject, true);
 
@@ -839,7 +838,7 @@ public class CompilationDatabaseParserTest extends BaseTestCase {
 
 		CompilationDatabaseParser parser = createCompilationDatabaseParser();
 		parser.setBuildParserId(GCC_BUILD_COMMAND_PARSER_EXT);
-		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toOSString());
+		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toString());
 
 		ICConfigurationDescription cfgDescription = getConfigurationDescription(fProject, true);
 
@@ -864,7 +863,7 @@ public class CompilationDatabaseParserTest extends BaseTestCase {
 
 		CompilationDatabaseParser parser = createCompilationDatabaseParser();
 		parser.setBuildParserId(GCC_BUILD_COMMAND_PARSER_EXT);
-		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toOSString());
+		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toString());
 
 		ICConfigurationDescription cfgDescription = getConfigurationDescription(fProject, true);
 
@@ -901,7 +900,7 @@ public class CompilationDatabaseParserTest extends BaseTestCase {
 
 		CompilationDatabaseParser parser = createCompilationDatabaseParser();
 		parser.setBuildParserId(GCC_BUILD_COMMAND_PARSER_EXT);
-		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toOSString());
+		parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toString());
 
 		ICConfigurationDescription cfgDescription = getConfigurationDescription(fProject, true);
 		addLanguageSettingsProvider(cfgDescription, parser);
@@ -917,11 +916,11 @@ public class CompilationDatabaseParserTest extends BaseTestCase {
 		assertFalse(CDataUtil.isExcluded(tu.getPath(), cfgDescription.getSourceEntries()));
 
 		// Modify the CDB, only to contain one file with different macro definition.
-		String sourceFilePath = fSourceFile.getLocation().toOSString();
+		String sourceFilePath = fSourceFile.getLocation().toString();
 		CompileCommand command = new CompileCommand();
-		command.directory = fSourceFile.getParent().getLocation().toOSString();
+		command.directory = fSourceFile.getParent().getLocation().toString();
 		command.file = sourceFilePath;
-		command.command = "g++ -I" + fFolder.getLocation().toOSString() + " -DFOO=200 " + sourceFilePath;
+		command.command = "g++ -I" + fFolder.getLocation().toString() + " -DFOO=200 " + sourceFilePath;
 		CompileCommand[] commands = new CompileCommand[1];
 		commands[0] = command;
 		String json = new Gson().toJson(commands);
@@ -973,7 +972,7 @@ public class CompilationDatabaseParserTest extends BaseTestCase {
 
 		CompilationDatabaseParser config1Parser = createCompilationDatabaseParser();
 		config1Parser.setBuildParserId(GCC_BUILD_COMMAND_PARSER_EXT);
-		config1Parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toOSString());
+		config1Parser.setCompilationDataBasePathProperty(fCdbFile.getLocation().toString());
 
 		ICConfigurationDescription cfgDescription = getConfigurationDescription(fProject, true);
 
