diff --git a/core/org.eclipse.cdt.core/model/org/eclipse/cdt/internal/core/model/PathEntryUtil.java b/core/org.eclipse.cdt.core/model/org/eclipse/cdt/internal/core/model/PathEntryUtil.java
index 9c065a6d58..c4e593cb3c 100644
--- a/core/org.eclipse.cdt.core/model/org/eclipse/cdt/internal/core/model/PathEntryUtil.java
+++ b/core/org.eclipse.cdt.core/model/org/eclipse/cdt/internal/core/model/PathEntryUtil.java
@@ -426,7 +426,7 @@ public class PathEntryUtil {
 				&& entry.getEntryKind() != IPathEntry.CDT_OUTPUT) {
 			if (!isValidWorkspacePath(project, path)) {
 				return new CModelStatus(ICModelStatusConstants.INVALID_PATHENTRY, CoreModelMessages.getFormattedString(
-						"PathEntryManager.0", new Object[] { path.toOSString(), ((PathEntry) entry).getKindString() })); //$NON-NLS-1$
+						"PathEntryManager.0", new Object[] { path.toString(), ((PathEntry) entry).getKindString() })); //$NON-NLS-1$
 			}
 		}
 
@@ -437,11 +437,11 @@ public class PathEntryUtil {
 				IPath includePath = include.getFullIncludePath();
 				if (!isValidExternalPath(includePath)) {
 					return new CModelStatus(ICModelStatusConstants.INVALID_PATHENTRY,
-							CoreModelMessages.getFormattedString("PathEntryManager.2", includePath.toOSString())); //$NON-NLS-1$
+							CoreModelMessages.getFormattedString("PathEntryManager.2", includePath.toString())); //$NON-NLS-1$
 				}
 				if (!isValidBasePath(include.getBasePath())) {
 					return new CModelStatus(ICModelStatusConstants.INVALID_PATHENTRY,
-							CoreModelMessages.getFormattedString("PathEntryManager.1", includePath.toOSString())); //$NON-NLS-1$
+							CoreModelMessages.getFormattedString("PathEntryManager.1", includePath.toString())); //$NON-NLS-1$
 				}
 			}
 			break;
@@ -454,7 +454,7 @@ public class PathEntryUtil {
 					if (!sourceAttach.isAbsolute()) {
 						if (!isValidWorkspacePath(project, sourceAttach) || !isValidExternalPath(sourceAttach)) {
 							return new CModelStatus(ICModelStatusConstants.INVALID_PATHENTRY, CoreModelMessages
-									.getFormattedString("PathEntryManager.3", sourceAttach.toOSString())); //$NON-NLS-1$
+									.getFormattedString("PathEntryManager.3", sourceAttach.toString())); //$NON-NLS-1$
 						}
 					}
 				}
@@ -462,11 +462,11 @@ public class PathEntryUtil {
 			IPath libraryPath = library.getFullLibraryPath();
 			if (!isValidExternalPath(libraryPath)) {
 				return new CModelStatus(ICModelStatusConstants.INVALID_PATHENTRY,
-						CoreModelMessages.getFormattedString("PathEntryManager.4", libraryPath.toOSString())); //$NON-NLS-1$
+						CoreModelMessages.getFormattedString("PathEntryManager.4", libraryPath.toString())); //$NON-NLS-1$
 			}
 			if (!isValidBasePath(library.getBasePath())) {
 				return new CModelStatus(ICModelStatusConstants.INVALID_PATHENTRY,
-						CoreModelMessages.getFormattedString("PathEntryManager.7", libraryPath.toOSString())); //$NON-NLS-1$
+						CoreModelMessages.getFormattedString("PathEntryManager.7", libraryPath.toString())); //$NON-NLS-1$
 			}
 			break;
 		}
