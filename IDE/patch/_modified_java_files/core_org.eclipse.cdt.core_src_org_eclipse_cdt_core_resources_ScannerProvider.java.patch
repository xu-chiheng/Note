diff --git a/core/org.eclipse.cdt.core/src/org/eclipse/cdt/core/resources/ScannerProvider.java b/core/org.eclipse.cdt.core/src/org/eclipse/cdt/core/resources/ScannerProvider.java
index d38d1333ae..f835b39703 100644
--- a/core/org.eclipse.cdt.core/src/org/eclipse/cdt/core/resources/ScannerProvider.java
+++ b/core/org.eclipse.cdt.core/src/org/eclipse/cdt/core/resources/ScannerProvider.java
@@ -111,9 +111,9 @@ public class ScannerProvider extends AbstractCExtension implements IScannerInfoP
 			String[] systemIncludes = new String[systemCount];
 			for (int i = 0, j = 0, k = 0; i < includeEntries.length; ++i) {
 				if (includeEntries[i].isSystemInclude()) {
-					systemIncludes[j++] = includeEntries[i].getFullIncludePath().toOSString();
+					systemIncludes[j++] = includeEntries[i].getFullIncludePath().toString();
 				} else {
-					localIncludes[k++] = includeEntries[i].getFullIncludePath().toOSString();
+					localIncludes[k++] = includeEntries[i].getFullIncludePath().toString();
 				}
 			}
 
@@ -121,7 +121,7 @@ public class ScannerProvider extends AbstractCExtension implements IScannerInfoP
 			IIncludeFileEntry[] includeFileEntries = CoreModel.getIncludeFileEntries(resPath);
 			String[] includeFiles = new String[includeFileEntries.length];
 			for (int i = 0; i < includeFiles.length; ++i) {
-				includeFiles[i] = includeFileEntries[i].getFullIncludeFilePath().toOSString();
+				includeFiles[i] = includeFileEntries[i].getFullIncludeFilePath().toString();
 			}
 
 			// get the macros
@@ -135,7 +135,7 @@ public class ScannerProvider extends AbstractCExtension implements IScannerInfoP
 			IMacroFileEntry[] macroFileEntries = CoreModel.getMacroFileEntries(resPath);
 			String[] macroFiles = new String[macroFileEntries.length];
 			for (int i = 0; i < macroFiles.length; ++i) {
-				macroFiles[i] = macroFileEntries[i].getFullMacroFilePath().toOSString();
+				macroFiles[i] = macroFileEntries[i].getFullMacroFilePath().toString();
 			}
 			return new ScannerInfo(systemIncludes, localIncludes, includeFiles, symbolMap, macroFiles);
 		} catch (CModelException e) {
