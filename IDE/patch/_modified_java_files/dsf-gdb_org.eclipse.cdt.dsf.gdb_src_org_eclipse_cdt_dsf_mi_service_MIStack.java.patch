diff --git a/dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/MIStack.java b/dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/MIStack.java
index ae8580abde..17350d0034 100644
--- a/dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/MIStack.java
+++ b/dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/MIStack.java
@@ -24,6 +24,7 @@ import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
 
+import org.eclipse.cdt.core.Cygwin;
 import org.eclipse.cdt.core.IAddress;
 import org.eclipse.cdt.dsf.concurrent.CountingRequestMonitor;
 import org.eclipse.cdt.dsf.concurrent.DataRequestMonitor;
@@ -64,6 +65,7 @@ import org.eclipse.cdt.dsf.service.DsfSession;
 import org.eclipse.cdt.utils.Addr32;
 import org.eclipse.cdt.utils.Addr64;
 import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.Platform;
 import org.eclipse.core.runtime.Status;
 import org.osgi.framework.BundleContext;
 
@@ -384,7 +386,15 @@ public class MIStack extends AbstractDsfService implements IStack, ICachingServi
 
 		@Override
 		public String getFile() {
-			return getMIFrame().getFile();
+			//translate debugger path to host source path
+			String debuggerPath = getMIFrame().getFile();
+			String sourcePath = debuggerPath;
+			if (Platform.getOS().equals(Platform.OS_WIN32)) {
+				if (debuggerPath.startsWith("/")) { //$NON-NLS-1$
+					sourcePath = Cygwin.pathToWindows(debuggerPath);
+				}
+			}
+			return sourcePath;
 		}
 
 		@Override
@@ -470,7 +480,7 @@ public class MIStack extends AbstractDsfService implements IStack, ICachingServi
 		fCommandFactory = getServicesTracker().getService(IMICommandControl.class).getCommandFactory();
 
 		getSession().addServiceEventListener(this, null);
-		register(new String[] { IStack.class.getName(), MIStack.class.getName() }, new Hashtable<String, String>());
+		register(new String[] { IStack.class.getName(), MIStack.class.getName() }, new Hashtable<>());
 		rm.done();
 	}
 
