diff --git a/jsoncdb/org.eclipse.cdt.jsoncdb.core.tests/src/org/eclipse/cdt/jsoncdb/core/internal/IncludePath_C_POSIXTest.java b/jsoncdb/org.eclipse.cdt.jsoncdb.core.tests/src/org/eclipse/cdt/jsoncdb/core/internal/IncludePath_C_POSIXTest.java
index 4365adbb33..ce7bed677c 100644
--- a/jsoncdb/org.eclipse.cdt.jsoncdb.core.tests/src/org/eclipse/cdt/jsoncdb/core/internal/IncludePath_C_POSIXTest.java
+++ b/jsoncdb/org.eclipse.cdt.jsoncdb.core.tests/src/org/eclipse/cdt/jsoncdb/core/internal/IncludePath_C_POSIXTest.java
@@ -78,7 +78,7 @@ public class IncludePath_C_POSIXTest {
 		assertEquals("#entries", 1, result.getSystemIncludePaths().size());
 		assertEquals("name", name, result.getSystemIncludePaths().get(0));
 
-		name = (new Path("A:an\\Include/Path")).toOSString();
+		name = (new Path("A:an\\Include/Path")).toString();
 		// -IA:an\Include/Path
 		result = new ParseContext();
 		assertEquals(2 + name.length(), testee.processArgument(result, cwd, "-I" + name + more));
@@ -121,7 +121,7 @@ public class IncludePath_C_POSIXTest {
 		assertEquals("#entries", 1, result.getSystemIncludePaths().size());
 		assertEquals("name", name, result.getSystemIncludePaths().get(0));
 
-		name = (new Path("A:an\\In CLU  de/Pat h")).toOSString();
+		name = (new Path("A:an\\In CLU  de/Pat h")).toString();
 		// -I'A:an\In CLU de/Pat h'
 		result = new ParseContext();
 		assertEquals(2 + name.length() + 2, testee.processArgument(result, cwd, "-I" + "\"" + name + "\"" + more));
@@ -139,7 +139,7 @@ public class IncludePath_C_POSIXTest {
 		final String more = " -g -MMD -MT CMakeFiles/execut1.dir/util1.c.o -MF \"CMakeFiles/execut1.dir/util1.c.o.d\""
 				+ " -o CMakeFiles/execut1.dir/util1.c.o -c /testprojects/C-subsrc/src/src-sub/main1.c";
 
-		String name = (new Path("a/relative/Include/Path")).toOSString();
+		String name = (new Path("a/relative/Include/Path")).toString();
 		IPath cwd = new Path("/compiler/working/dir");
 		ParseContext result = new ParseContext();
 		assertEquals(2 + name.length(), testee.processArgument(result, cwd, "-I" + name + more));
@@ -147,7 +147,7 @@ public class IncludePath_C_POSIXTest {
 		String absPath = cwd.append(name).toString();
 		assertEquals("name", absPath, result.getSystemIncludePaths().get(0));
 
-		name = (new Path("a\\relative\\Include\\Path")).toOSString();
+		name = (new Path("a\\relative\\Include\\Path")).toString();
 		cwd = new Path("\\compiler\\working\\dir");
 		result = new ParseContext();
 		assertEquals(2 + name.length(), testee.processArgument(result, cwd, "-I" + name + more));
@@ -155,7 +155,7 @@ public class IncludePath_C_POSIXTest {
 		absPath = cwd.append(name).toString();
 		assertEquals("name", absPath, result.getSystemIncludePaths().get(0));
 
-		name = (new Path("../../src/Include/Path")).toOSString();
+		name = (new Path("../../src/Include/Path")).toString();
 		cwd = new Path("/compiler/working/dir");
 		result = new ParseContext();
 		assertEquals(2 + name.length(), testee.processArgument(result, cwd, "-I" + name + more));
@@ -163,7 +163,7 @@ public class IncludePath_C_POSIXTest {
 		absPath = cwd.append(name).toString();
 		assertEquals("name", absPath, result.getSystemIncludePaths().get(0));
 
-		name = (new Path("..\\..\\src\\Include\\Path")).toOSString();
+		name = (new Path("..\\..\\src\\Include\\Path")).toString();
 		cwd = new Path("\\compiler\\working\\dir");
 		result = new ParseContext();
 		assertEquals(2 + name.length(), testee.processArgument(result, cwd, "-I" + name + more));
