diff --git a/remote/org.eclipse.remote.core/src/org/eclipse/remote/internal/core/services/local/LocalProcessBuilder.java b/remote/org.eclipse.remote.core/src/org/eclipse/remote/internal/core/services/local/LocalProcessBuilder.java
index 3f7a4a3a2f..71b2d5d768 100644
--- a/remote/org.eclipse.remote.core/src/org/eclipse/remote/internal/core/services/local/LocalProcessBuilder.java
+++ b/remote/org.eclipse.remote.core/src/org/eclipse/remote/internal/core/services/local/LocalProcessBuilder.java
@@ -41,6 +41,7 @@ import org.eclipse.remote.core.IRemoteProcess;
 import org.eclipse.remote.core.IRemoteProcessBuilder;
 import org.eclipse.remote.internal.core.RemoteCorePlugin;
 import org.eclipse.remote.internal.core.RemoteProcess;
+import org.eclipse.cdt.utils.spawner.ProcessFactory;
 
 public class LocalProcessBuilder extends AbstractRemoteProcessBuilder {
 	private static final String EXTENSION_POINT_ID = "processFactory"; //$NON-NLS-1$
@@ -148,32 +149,32 @@ public class LocalProcessBuilder extends AbstractRemoteProcessBuilder {
 			processFactory = new IProcessFactory() {
 				@Override
 				public Process exec(String cmd) throws IOException {
-					return Runtime.getRuntime().exec(cmd);
+					return ProcessFactory.getFactory().exec(cmd);
 				}
 
 				@Override
 				public Process exec(String[] cmdarray) throws IOException {
-					return Runtime.getRuntime().exec(cmdarray);
+					return ProcessFactory.getFactory().exec(cmdarray);
 				}
 
 				@Override
 				public Process exec(String[] cmdarray, String[] envp) throws IOException {
-					return Runtime.getRuntime().exec(cmdarray, envp);
+					return ProcessFactory.getFactory().exec(cmdarray, envp);
 				}
 
 				@Override
 				public Process exec(String cmd, String[] envp) throws IOException {
-					return Runtime.getRuntime().exec(cmd, envp);
+					return ProcessFactory.getFactory().exec(cmd, envp);
 				}
 
 				@Override
 				public Process exec(String cmd, String[] envp, File dir) throws IOException {
-					return Runtime.getRuntime().exec(cmd, envp, dir);
+					return ProcessFactory.getFactory().exec(cmd, envp, dir);
 				}
 
 				@Override
 				public Process exec(String[] cmdarray, String[] envp, File dir) throws IOException {
-					return Runtime.getRuntime().exec(cmdarray, envp, dir);
+					return ProcessFactory.getFactory().exec(cmdarray, envp, dir);
 				}
 			};
 		}
