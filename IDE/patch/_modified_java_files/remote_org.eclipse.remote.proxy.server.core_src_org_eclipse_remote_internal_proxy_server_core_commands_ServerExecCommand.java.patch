diff --git a/remote/org.eclipse.remote.proxy.server.core/src/org/eclipse/remote/internal/proxy/server/core/commands/ServerExecCommand.java b/remote/org.eclipse.remote.proxy.server.core/src/org/eclipse/remote/internal/proxy/server/core/commands/ServerExecCommand.java
index 06ebe5e1ef..66887b4320 100644
--- a/remote/org.eclipse.remote.proxy.server.core/src/org/eclipse/remote/internal/proxy/server/core/commands/ServerExecCommand.java
+++ b/remote/org.eclipse.remote.proxy.server.core/src/org/eclipse/remote/internal/proxy/server/core/commands/ServerExecCommand.java
@@ -14,7 +14,9 @@ import java.io.File;
 import java.io.IOException;
 import java.util.List;
 import java.util.Map;
+import java.util.TreeMap;
 
+import org.eclipse.cdt.utils.spawner.ProcessFactory;
 import org.eclipse.remote.proxy.protocol.core.StreamChannel;
 
 /**
@@ -29,16 +31,19 @@ public class ServerExecCommand extends AbstractServerExecCommand {
 			System.err.print(arg + " ");
 		}
 		System.err.println();
-		ProcessBuilder builder = new ProcessBuilder(getCommand());
+		List<String> commandLine = getCommand();
+		String[] cmdarray = new String[commandLine.size()];
+		commandLine.toArray(cmdarray);
+		TreeMap<String, String> envMap = ProcessFactory.getDefaultEnvMap();
 		try {
 			if (!isAppendEnv()) {
-				builder.environment().clear();
-				builder.environment().putAll(getEnv());
+				envMap.clear();
+				envMap.putAll(getEnv());
 			} else {
 				for (Map.Entry<String, String> entry : getEnv().entrySet()) {
-					String val = builder.environment().get(entry.getKey());
+					String val = envMap.get(entry.getKey());
 					if (val == null || !val.equals(entry.getValue())) {
-						builder.environment().put(entry.getKey(), entry.getValue());
+						envMap.put(entry.getKey(), entry.getValue());
 					}
 				}
 			}
@@ -46,11 +51,11 @@ public class ServerExecCommand extends AbstractServerExecCommand {
 			// Leave environment untouched
 		}
 		File dir = new File(getDirectory());
-		if (dir.exists() && dir.isAbsolute()) {
-			builder.directory(dir);
+		if (!(dir.exists() && dir.isAbsolute())) {
+			dir = null;
 		}
-		builder.redirectErrorStream(isRedirect());
-		return builder.start();
+		Process process = ProcessFactory.getFactory().exec2(cmdarray, envMap, dir);
+		return process;
 	}
 
 	@Override
