diff --git a/gcc/incpath.cc b/gcc/incpath.cc
index 64cdd2f4a1b..ec9ddb6f51e 100644
--- a/gcc/incpath.cc
+++ b/gcc/incpath.cc
@@ -99,6 +99,59 @@ free_path (struct cpp_dir *path, int reason)
 static void
 add_env_var_paths (const char *env_var, incpath_kind chain)
 {
+	const char * temp = getenv(env_var);
+	if (temp) {
+		size_t len = strlen(temp);
+		char paths[len + 10];
+		strcpy(paths, temp);
+
+		char path_separator = PATH_SEPARATOR;
+		size_t i = 0;
+		while (i < len) {
+			size_t path_start, path_end;
+			while (i < len && paths[i] == path_separator) {
+				i++;
+			}
+			// i == len || paths[i] != path_separator
+			path_start = i;
+			while (i < len && paths[i] != path_separator) {
+				i++;
+			}
+			// i == len || paths[i] == path_separator
+			path_end = i;
+
+			bool completed;
+			if (i < len) {
+				// paths[i] == path_separator
+				// see the separator
+				completed = false;
+				i++;
+			} else {
+				// i == len
+				// end of line \0
+				completed = true;
+			}
+
+			size_t path_len = path_end - path_start;
+			if (path_len > 0) {
+				paths[path_end] = 0;
+				char * path = xstrdup (paths + path_start);
+
+				add_path (path, chain, chain == INC_SYSTEM, false);
+
+				if (!completed) {
+
+				} else {
+					break;
+				}
+			} else {
+				// empty path, ignore
+			}
+
+		}
+	}
+
+#if 0
   char *p, *q, *path;
 
   q = getenv (env_var);
@@ -123,6 +176,7 @@ add_env_var_paths (const char *env_var, incpath_kind chain)
 
       add_path (path, chain, chain == INC_SYSTEM, false);
     }
+#endif
 }
 
 /* Append the standard include chain defined in cppdefault.cc.  */
