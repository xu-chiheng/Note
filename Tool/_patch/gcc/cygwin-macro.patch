diff --git a/gcc/ada/cstreams.c b/gcc/ada/cstreams.c
index ca94ce749ec..7401fe0835c 100644
--- a/gcc/ada/cstreams.c
+++ b/gcc/ada/cstreams.c
@@ -38,7 +38,7 @@
 /* the define above will make off_t a 64bit type on GNU/Linux */
 
 /* Tell Cygwin's <stdio.h> to expose fileno_unlocked() */
-#if defined(__CYGWIN__) && !defined(__CYGWIN32__) && !defined(_GNU_SOURCE)
+#if defined(__CYGWIN64__) && !defined(_GNU_SOURCE)
 #define _GNU_SOURCE
 #endif
 
diff --git a/gcc/ada/mingw32.h b/gcc/ada/mingw32.h
index 97ac3cc61bf..91b09dfb993 100644
--- a/gcc/ada/mingw32.h
+++ b/gcc/ada/mingw32.h
@@ -47,7 +47,7 @@
 #ifndef __CYGWIN__
 #include <tchar.h>
 #endif
-#if defined (__CYGWIN__) && !defined (__CYGWIN32__) && !defined (IN_RTS)
+#if defined (__CYGWIN64__) && !defined (IN_RTS)
 /* Note: windows.h on cygwin-64 includes x86intrin.h which uses malloc.
    That fails to compile, if malloc is poisoned, i.e. if !IN_RTS.  */
 #define _X86INTRIN_H_INCLUDED
diff --git a/gcc/config/i386/cygwin.h b/gcc/config/i386/cygwin.h
index 63de10c17d4..cc8aa7b6fbe 100644
--- a/gcc/config/i386/cygwin.h
+++ b/gcc/config/i386/cygwin.h
@@ -22,8 +22,8 @@ along with GCC; see the file COPYING3.  If not see
   do								\
     {								\
       builtin_define ("__CYGWIN__");				\
-      if (!TARGET_64BIT)					\
-	builtin_define ("__CYGWIN32__");			\
+      if (TARGET_64BIT)					\
+	builtin_define ("__CYGWIN64__");			\
       builtin_define ("__unix__");				\
       builtin_define ("__unix");				\
     }								\
diff --git a/include/libiberty.h b/include/libiberty.h
index 32385911690..02988e0ac91 100644
--- a/include/libiberty.h
+++ b/include/libiberty.h
@@ -107,7 +107,7 @@ extern int countargv (char * const *);
 #if !HAVE_DECL_BASENAME
 #if defined (__GNU_LIBRARY__ ) || defined (__linux__) \
  || defined (__FreeBSD__) || defined (__OpenBSD__) || defined (__NetBSD__) \
- || defined (__CYGWIN__) || defined (__CYGWIN32__) || defined (__MINGW32__) \
+ || defined (__CYGWIN__) || defined (__MINGW32__) \
  || defined (__DragonFly__) || defined (HAVE_DECL_BASENAME) 
 extern char *basename (const char *) ATTRIBUTE_RETURNS_NONNULL ATTRIBUTE_NONNULL(1);
 #else
