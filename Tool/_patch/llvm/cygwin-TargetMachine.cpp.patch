diff --git a/llvm/lib/Target/TargetMachine.cpp b/llvm/lib/Target/TargetMachine.cpp
index 8ddc74200429..24aefb5c1ecd 100644
--- a/llvm/lib/Target/TargetMachine.cpp
+++ b/llvm/lib/Target/TargetMachine.cpp
@@ -42,11 +42,12 @@ TargetMachine::~TargetMachine() = default;
 bool TargetMachine::isLargeGlobalValue(const GlobalValue *GVal) const {
   if (getTargetTriple().getArch() != Triple::x86_64)
     return false;
+  bool targetIsCygwin64 = getTargetTriple().isWindowsCygwinEnvironment();
 
   // Remaining logic below is ELF-specific. For other object file formats where
   // the large code model is mostly used for JIT compilation, just look at the
   // code model.
-  if (!getTargetTriple().isOSBinFormatELF())
+  if (!targetIsCygwin64 && !getTargetTriple().isOSBinFormatELF())
     return getCodeModel() == CodeModel::Large;
 
   auto *GO = GVal->getAliaseeObject();
@@ -65,7 +66,7 @@ bool TargetMachine::isLargeGlobalValue(const GlobalValue *GVal) const {
   if (!GV) {
     // Handle explicit sections as we do for GlobalVariables with an explicit
     // section, see comments below.
-    if (GO->hasSection()) {
+    if (!targetIsCygwin64 && GO->hasSection()) {
       StringRef Name = GO->getSection();
       return IsPrefix(Name, ".ltext");
     }
