diff --git a/clang/lib/Driver/ToolChains/MinGW.cpp b/clang/lib/Driver/ToolChains/MinGW.cpp
index c81a7ed17029..1f41bf446f54 100644
--- a/clang/lib/Driver/ToolChains/MinGW.cpp
+++ b/clang/lib/Driver/ToolChains/MinGW.cpp
@@ -690,21 +690,24 @@ void toolchains::MinGW::AddClangSystemIncludeArgs(const ArgList &DriverArgs,
   if (DriverArgs.hasArg(options::OPT_nostdlibinc))
     return;
 
-  addSystemInclude(DriverArgs, CC1Args,
-                   Base + SubdirName + llvm::sys::path::get_separator() +
-                       "include");
+  addSystemInclude(DriverArgs, CC1Args, Base + SubdirName + "/include");
 
-  // Gentoo
-  addSystemInclude(DriverArgs, CC1Args,
-                   Base + SubdirName + llvm::sys::path::get_separator() + "usr/include");
-
-  // Only include <base>/include if we're not cross compiling (but do allow it
-  // if we're on Windows and building for Windows on another architecture),
-  // or if the sysroot has been set (where we presume the user has pointed it
-  // at an arch specific subdirectory).
-  if (!::isCrossCompiling(getTriple(), /*RequireArchMatch=*/false) ||
+  if (!::isCrossCompiling(getTriple(), /*RequireArchMatch=*/true) ||
       getDriver().SysRoot.size())
     addSystemInclude(DriverArgs, CC1Args, Base + "include");
+
+	if (!::isCrossCompiling(getTriple(), /*RequireArchMatch=*/true)) {
+		const char * path = getenv("INCLUDE");
+		if (path) {
+			addSystemInclude(DriverArgs, CC1Args, path);
+		} else {
+
+		}
+	} else if (getDriver().SysRoot.size()) {
+	    addSystemInclude(DriverArgs, CC1Args, getDriver().SysRoot + "/include");
+	} else {
+		// must add include directories by -I option
+	}
 }
 
 void toolchains::MinGW::addClangTargetOptions(
