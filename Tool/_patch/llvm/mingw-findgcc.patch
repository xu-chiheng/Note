diff --git a/clang/lib/Driver/ToolChains/MinGW.cpp b/clang/lib/Driver/ToolChains/MinGW.cpp
index d06c39394dbf..e9952b28e04e 100644
--- a/clang/lib/Driver/ToolChains/MinGW.cpp
+++ b/clang/lib/Driver/ToolChains/MinGW.cpp
@@ -408,17 +408,11 @@ static llvm::Triple getLiteralTriple(const Driver &D, const llvm::Triple &T) {
 
 void toolchains::MinGW::findGccLibDir(const llvm::Triple &LiteralTriple) {
   llvm::SmallVector<llvm::SmallString<32>, 5> SubdirNames;
-  SubdirNames.emplace_back(LiteralTriple.str());
-  SubdirNames.emplace_back(getTriple().str());
   SubdirNames.emplace_back(getTriple().getArchName());
-  SubdirNames.back() += "-w64-mingw32";
-  SubdirNames.emplace_back(getTriple().getArchName());
-  SubdirNames.back() += "-w64-mingw32ucrt";
-  SubdirNames.emplace_back("mingw32");
-  if (SubdirName.empty()) {
-    SubdirName = getTriple().getArchName();
-    SubdirName += "-w64-mingw32";
-  }
+  SubdirNames.back() += "-pc-mingw64";
+  SubdirNames.emplace_back("mingw64");
+  if (SubdirName.empty())
+    SubdirName = SubdirNames[0].str();
   // lib: Arch Linux, Ubuntu, Windows
   // lib64: openSUSE Linux
   for (StringRef CandidateLib : {"lib", "lib64"}) {
@@ -436,15 +430,9 @@ void toolchains::MinGW::findGccLibDir(const llvm::Triple &LiteralTriple) {
 static llvm::ErrorOr<std::string> findGcc(const llvm::Triple &LiteralTriple,
                                           const llvm::Triple &T) {
   llvm::SmallVector<llvm::SmallString<32>, 5> Gccs;
-  Gccs.emplace_back(LiteralTriple.str());
-  Gccs.back() += "-gcc";
-  Gccs.emplace_back(T.str());
-  Gccs.back() += "-gcc";
   Gccs.emplace_back(T.getArchName());
-  Gccs.back() += "-w64-mingw32-gcc";
-  Gccs.emplace_back(T.getArchName());
-  Gccs.back() += "-w64-mingw32ucrt-gcc";
-  Gccs.emplace_back("mingw32-gcc");
+  Gccs[0] += "-pc-mingw64-gcc";
+  Gccs.emplace_back("mingw64-gcc");
   // Please do not add "gcc" here
   for (StringRef CandidateGcc : Gccs)
     if (llvm::ErrorOr<std::string> GPPName = llvm::sys::findProgramByName(CandidateGcc))
@@ -456,12 +444,9 @@ static llvm::ErrorOr<std::string>
 findClangRelativeSysroot(const Driver &D, const llvm::Triple &LiteralTriple,
                          const llvm::Triple &T, std::string &SubdirName) {
   llvm::SmallVector<llvm::SmallString<32>, 4> Subdirs;
-  Subdirs.emplace_back(LiteralTriple.str());
   Subdirs.emplace_back(T.str());
   Subdirs.emplace_back(T.getArchName());
-  Subdirs.back() += "-w64-mingw32";
-  Subdirs.emplace_back(T.getArchName());
-  Subdirs.back() += "-w64-mingw32ucrt";
+  Subdirs.back() += "-pc-mingw64";
   StringRef ClangRoot = llvm::sys::path::parent_path(D.getInstalledDir());
   StringRef Sep = llvm::sys::path::get_separator();
   for (StringRef CandidateSubdir : Subdirs) {
