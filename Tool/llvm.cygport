inherit cmake

# package name
NAME="llvm"
# VERSION=16.0.6
# VERSION=17.0.6
VERSION=18.1.8
RELEASE=1

# package metadata
CATEGORY="Devel"
SUMMARY="The LLVM Compiler Infrastructure"
DESCRIPTION="The LLVM Project is a collection of modular and reusable compiler and toolchain technologies."
HOMEPAGE="https://llvm.org"
LICENSE="Apache License v2.0 with LLVM Exceptions"

# source and patch files
SRC_URI="https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-${VERSION}.tar.gz"
SRC_DIR="llvm-project-llvmorg-${VERSION}"

PATCHES=(
	# 16.0.0    b0daacf58f417634f7c7c9496589d723592a8f5a 2023-01-24
	# _patch/llvm/{cygwin-{basic,cmodel-0,driver-0,general-{a,b,c},macro},mingw-{ldflags,pthread,emutls-0,findgcc-0},pseudo-{gen-Main,lib-Grammar}.cpp}.patch

	# 17.0.0    d0b54bb50e5110a004b41fc06dadf3fee70834b7 2023-07-25
	# _patch/llvm/{cygwin-{basic,cmodel-0,driver-0,general-{a,b,c},macro,CGCall.h},mingw-{ldflags,pthread,emutls-1,findgcc-0,Value.h},pseudo-{gen-Main,lib-Grammar}.cpp}.patch

	# 18.0.0    93248729cfae82a5ca2323d4a8e15aa3b9b9c707 2024-01-24
	_patch/llvm/{cygwin-{basic,cmodel-1,driver-2,general-{a,b,c},macro,CGCall.h,X86ISelLowering.cpp,X86ISelDAGToDAG.cpp-{a,b,c}},mingw-{ldflags,pthread,emutls-1,findgcc-0,Value.h},pseudo-{gen-Main,lib-Grammar}.cpp}.patch \
	_patch/llvm/cygwin-disable-debug-ata.patch

	# 19.0.0    c5f839bd58e7f888acc4cb39a18e9e5bbaa9fb0a 2024-03-22
	# _patch/llvm/{cygwin-{basic,cmodel-1,driver-2,general-{a,b,c},macro,CGCall.h,X86ISelLowering.cpp,X86ISelDAGToDAG.cpp-{a,b,c}},mingw-{ldflags,pthread,emutls-1,findgcc-1,Value.h},pseudo-{gen-Main,lib-Grammar}.cpp}.patch \
	# _patch/llvm/cygwin-disable-debug-ata.patch
)

PATCH_URI="${PATCHES[*]}"

# CYGCMAKE_SOURCE="llvm"
# CYGCMAKE_SOURCE="../src/${SRC_DIR}/llvm"
# cygport: CYGCMAKE_SOURCE seems to have no effect.
# https://cygwin.com/pipermail/cygwin/2021-September/249412.html
CYGCMAKE_SOURCE="$(pwd)/${NAME}-${VERSION}-${RELEASE}.${ARCH}/src/${SRC_DIR}/llvm"

CMAKE_OPTIONS=(
		-DLLVM_TARGETS_TO_BUILD=all
		-DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra;lld"
		-DLLVM_ENABLE_RUNTIMES=
		-DLLVM_BUILD_RUNTIME=ON
		-DLLVM_OPTIMIZED_TABLEGEN=ON
		-DLLVM_ENABLE_WERROR=OFF
		-DLLVM_ENABLE_ASSERTIONS=OFF
		-DLLVM_ENABLE_BACKTRACES=OFF
		-DLLVM_ENABLE_LIBXML2=ON
		-DLLVM_ENABLE_PLUGINS=OFF
		-DLLVM_ENABLE_MODULES=OFF
		-DLLVM_BUILD_TESTS=ON
		-DLLVM_INCLUDE_TESTS=ON
		-DLLVM_BUILD_BENCHMARKS=OFF
		-DLLVM_INCLUDE_BENCHMARKS=OFF
		-DLLVM_BUILD_EXAMPLES=OFF
		-DLLVM_INCLUDE_EXAMPLES=OFF
		-DLLVM_INCLUDE_DOCS=OFF
		-DCLANG_BUILD_TOOLS=ON
		-DCLANG_ENABLE_ARCMT=ON
		-DCLANG_ENABLE_STATIC_ANALYZER=ON
		-DCLANG_INCLUDE_TESTS=ON
		-DCLANG_BUILD_EXAMPLES=OFF
		-DCLANG_INCLUDE_DOCS=OFF
		-DLLVM_INSTALL_UTILS=ON
		-DLLVM_BUILD_LLVM_C_DYLIB=OFF
		-DBUILD_SHARED_LIBS=ON
)

CYGCMAKE_ARGS="${CMAKE_OPTIONS[*]}"

CYGCMAKE_GENERATOR="Unix Makefiles"

CC=gcc
CXX=g++
# CC=clang
# CXX=clang++

C_CXX_COMMON_FLAGS="-march=x86-64 -O3"
CFLAGS="${C_CXX_COMMON_FLAGS}"
CXXFLAGS="${C_CXX_COMMON_FLAGS}"

LDFLAGS="-Wl,--strip-all -Wl,--dynamicbase"

MAKEOPTS="-j$(expr $(nproc --all) '*' 2)"

# use the standard cmake src_compile, src_install and src_test

# this function should be synced with the same function in common.sh
# https://github.com/xu-chiheng/Note/blob/main/Tool/common.sh
# MIT License
process_install_dir_bin_symlinks () {
	local install_dir="$1"
	pushd "${install_dir}" \
	&& for path in $(find bin); do
		if [ -L "${path}" ]; then
			path2="$(readlink -f "${path}")"
			if [ -f "${path2}" ]; then
				local base="$(basename "${path}")"
				local base2="$(basename "${path2}")"
				local suffix="${base2##*.}"

				local path1="${path}"
				if [ ! -z "${suffix}" ]; then
					if [[ "${base}" == *".${suffix}" ]]; then
						# echo "The file has the specified suffix."
						true
					else
						# echo "The file does not have the specified suffix."
						path1+=".${suffix}"
					fi
				fi
				if ! { rm -rf "${path}" && cp -f "${path2}" "${path1}" ;}; then
					echo "failed to process symlink ${path} pointing to ${path2}"
					return 1
				fi
			fi
		fi
	done \
	&& popd
}

src_install() {
	cd "${B}"
	cyginstall \
	&& process_install_dir_bin_symlinks "${D}/usr"
}
